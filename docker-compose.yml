
services:

  backend:
    build: 
      context: server
      target: dev
    depends_on:
      database:
        condition: service_healthy
    links:
      - database
    container_name: recipe-rebel-backend
    volumes:
      - ./server:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${SERVER_DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ADMIN_EMAIL=${DB_ADMIN_EMAIL}
      - SEGREDO_JWT=${SEGREDO_JWT}
      - SAL_SENHA=${SAL_SENHA}
      - SERVER_REDIS_HOST=${SERVER_REDIS_HOST}
      - SERVER_REDIS_PORT=${SERVER_REDIS_PORT}
    entrypoint: npm run start:dev

  frontend:
    build: 
      context: web
      target: dev
    links:
      - backend
    container_name: recipe-rebel-frontend
    volumes:
      - ./web:/usr/src/app
      - frontend_node_modules:/usr/src/app/node_modules
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    environment:
      - WEB_PORT=${WEB_PORT}
    entrypoint: npm run dev


  database:
    container_name: recipe-rebel-db
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
       - db_rebel:/data/postgres
    ports:
      - "${DB_PORT}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}", "-d", "${DB_NAME}"]
      interval: 3s
      timeout: 5s
      retries: 5

  redis:
    container_name: recipe-rebel-cache
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    volumes:
      - redis:/data

volumes:
    db_rebel:
    redis:
    backend_node_modules:
    frontend_node_modules:
